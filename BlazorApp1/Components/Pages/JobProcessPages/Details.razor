@page "/jobprocesses/details"
@inject BlazorApp1.Models.JobTrackerDevContext DB
@using BlazorApp1.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>JobProcess</h4>
    <hr />
    @if (jobprocess is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@jobprocess.Name</dd>
            <dt class="col-sm-2">PluralName</dt>
            <dd class="col-sm-10">@jobprocess.PluralName</dd>
            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10">@StatusText(jobprocess.IsActive)</dd>
        </dl>
        <div>
            <a href="@($"/jobprocesses/edit?id={jobprocess.Id}")">Edit</a> |
            <a href="@($"/jobprocesses")">Back to List</a>
        </div>
    }
</div>

@code {
    JobProcess? jobprocess;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    public string StatusText(bool isActive)
    {
        return isActive ? "Active" : "Inactive";
    }

    protected override async Task OnInitializedAsync()
    {
        jobprocess = await DB.JobProcesses.FirstOrDefaultAsync(m => (int)m.JobProcessId == Id);

        if (jobprocess is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
